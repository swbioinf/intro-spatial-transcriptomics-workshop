[{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"Overview spatial transcriptomics workshop.","code":""},{"path":"intro.html","id":"intro","chapter":"2 Introduction","heading":"2 Introduction","text":"Intro/Welcome 10-15 minsCheck everyone can login servers (10m)Link intro slides.Workshop style - interactiveSchedule","code":""},{"path":"intro.html","id":"workflow","chapter":"2 Introduction","heading":"2.1 Workflow","text":"","code":""},{"path":"background.html","id":"background","chapter":"3 Background","heading":"3 Background","text":"Background (Conceptual) 25 mins (aim reduce)high-level overview spatial fits existing omics technologiesSimilarities differences single cell, bulk, visiumBasic techs\nComparison techs, ones use, ?\nComparison techs, ones use, ?Questions like know noob:\n’s cost-effective tech?\none used samples conditions interest?\nConsiderations study design, .e. many replicates\n’s cost-effective tech?one used samples conditions interest?Considerations study design, .e. many replicatesWhich tools packages use\nR vs. Python\nSfe (biconductor vs seurat)\nR vs. PythonSfe (biconductor vs seurat)","code":""},{"path":"study-overview.html","id":"study-overview","chapter":"4 Study overview","heading":"4 Study overview","text":"","code":""},{"path":"study-overview.html","id":"learning-objectives","chapter":"4 Study overview","heading":"4.1 Learning objectives","text":"Explain spatial transcriptomics used study immune cell organisation\nIBDDescribe data set structured healthy disease cohortsEvaluate replicates balanced sampling improves reliability \nspatial transcriptomic studies","code":""},{"path":"study-overview.html","id":"background-1","chapter":"4 Study overview","heading":"4.2 Background","text":"workshop use CosMx Spatial Molecular Imager (SMI) data paper\nMacrophage neutrophil heterogeneity\nsingle-cell spatial resolution human inflammatory bowel disease\n(Garrido-Trigo et al. 2023)1.data set chosen authors made raw \nannotated data available, along corresponding analysis\ncode browsable\ndata interface.study provides clear biological contrast health disease\nstates. disease cohort consists donors active inflammatory bowel\ndisease (IBD), chronic inflammatory condition gastrointestinal (GI) tract,\nimmune cell organisation within tissue plays central role \ndisease pathogenesis.Inflammatory bowel disease (IBD) umbrella term includes two main GI tract disorders different characteristics: Crohn’s disease (CD) ulcerative colitis (UC).Spatial transcriptomic technologies enable gene expression measured \nsubcellular resolution preserving tissue architecture, allowing\nresearchers uncover spatial patterns cell-cell interactions \nlost conventional bulk single-cell RNA-seq data.","code":""},{"path":"study-overview.html","id":"the-experimental-design-and-cohorts","chapter":"4 Study overview","heading":"4.3 The experimental design and cohorts","text":"Fig 1a Garrido-Trigo et al. (2023).study included 9 CosMx slides colonic biopsies, total 9 donors:study includes three biological replicates per condition (HC, UC, CD).\nprovides enough variation capture differences individuals \nmaintaining manageable data size hands-analysis.workshop, focus healthy control (HC)\nCrohn’s disease (CD) samples.original paper, CosMX SMI cells annotated via label transfer \nscRNA data. spatial transcriptomics data processed independent scRNA data demonstrate differences cellular composition spatial organisation can inferred directly spatial CosMx data.TODO: Include image plots created downstream steps.","code":""},{"path":"aims.html","id":"aims","chapter":"5 Aims for today","heading":"5 Aims for today","text":"Start backwards - plots makeOften difficult understand point tutorial start dataIdentify minimal end--end analysis/analysesSpatial new field - lot new tools development","code":""},{"path":"understanding-our-spatial-data.html","id":"understanding-our-spatial-data","chapter":"6 Understanding our spatial data","heading":"6 Understanding our spatial data","text":"","code":""},{"path":"understanding-our-spatial-data.html","id":"learning-objectives-1","chapter":"6 Understanding our spatial data","heading":"6.1 Learning objectives","text":"","code":""},{"path":"understanding-our-spatial-data.html","id":"overview-1","chapter":"6 Understanding our spatial data","heading":"6.2 Overview","text":"Conducting processing data analysis steps open source, third-party\nsoftware/packages provides flexibility supports range different\nanalyses. However, key steps undertaken can load data\nR/Python.","code":"\nlibrary(Seurat)\nlibrary(SeuratObject)\nlibrary(tidyverse)\nlibrary(here)"},{"path":"understanding-our-spatial-data.html","id":"the-raw-data","chapter":"6 Understanding our spatial data","heading":"6.3 The raw data","text":"files generated high-resolution spatial transcriptomics platforms, \nCosMx Spatial Molecular Imager (SMI), typically categorised based \nprocessing stage. Raw Files contain primary output \ninstrument’s run, necessary decoding spatial assignment, \nFlat Files represent aggregated, cell-level data ready statistical\nanalysis R environments.","code":""},{"path":"understanding-our-spatial-data.html","id":"raw-files","chapter":"6 Understanding our spatial data","heading":"6.3.1 Raw files","text":"raw files represent initial, large-volume data output directly \nimaging instrument spatial transcriptomics experiment complete.\ndirectory contains key imaging log information required \ncomputationally process raw fluorescent signals quantifiable transcript\nlocations cellular boundaries.Key raw folders files contain essential data used segmentation \ncell coordinate mapping. example, CellStatsDir/Morphology2D folder\nholds images, including generated immunofluorescence staining\n(e.g., DAPI, PanCK, CD45), vital inputs cell segmentation, \nraw gene expression measurements initially transcript level, \ncell level.Additionally, RunSummary/ directory contains instrument configuration\nfiles necessary accurately converting image pixels physical slide X-Y\ncoordinates.Data retrieved \nCosMxDACustomModules.","code":""},{"path":"understanding-our-spatial-data.html","id":"flat-files","chapter":"6 Understanding our spatial data","heading":"6.3.2 Flat files","text":"need access every one files!need processing. Typically directory flat files \nread whole, don’t need worry much. note \nimages .flat files contain organised, post-processing outputs pipeline\n(like AtoMx SIP) directly ready loading R packages \nSeurat.files come cell segmentation, single-molecule data \nsummarised count matrices single-cell level. main file,\nSLIDE_exprMat_file.csv.gz, contains counts genes per cell.note cell segmentationCell segmentation computational step imaging-based ST \nidentifies boundaries individual cells RNA molecules can \ncorrectly assigned one.uses nuclear (DAPI) /membrane stains group transcript locations\ncell--gene count matrix cell border shapes (polygons) \ndownstream analysis.Accurate segmentation essential determines reliably\ntranscripts assigned individual cells, directly affects\ndownstream analyses. Commercial platforms like CosMx Xenium include\nsegmentation processing pipelines.However, may choose re-run segmentation using independent tools \nCellpose (image-based) Baysor (transcript-based hybrid) improve\nboundary accuracy adapt specific tissue types.Additionally, key metadata files read alongside gene counts \ninform spatial coordinates FoVs (SLIDE_fov_positions_file.csv.gz),\ntranscripts (SLIDE_tx_file.csv.gz), segmented cell boundaries\n(SLIDE-polygons.csv.gz).Xenium dataFor Xenium slide just one typical output directory; discuss\nformats section \ndata archiving,\n, software tools take directory whole.","code":""},{"path":"understanding-our-spatial-data.html","id":"importing-the-flat-files-into-r","chapter":"6 Understanding our spatial data","heading":"6.4 Importing the flat files into R","text":"note Seurat::LoadNanostring()load flat files R, can use Seurat::LoadNanostring() function.\nHowever, default method drops metadata Seurat object.\nexample, field view (FoV) cell member missing.provide alternate function. time, fixed within Seurat.\nSee comments . \nexample code snippet using replacement function:","code":"\n# Import the custom LoadNanostring() function\nsource(here(\"scripts/LoadNanostring_edited_function.R\"))\n\n# Define the path to the flat files. Note that the input is the whole directory.\n# The function deals with reading and assigning the metadata correctly to the\n# cells and gene counts\nexample_path <- here(\"raw_data\", \"GSM7473682_HC_a/\")\nexample_so <- LoadNanostring(example_path, assay='RNA', fov=\"GSM7473682.HC.a\")"},{"path":"understanding-our-spatial-data.html","id":"loading-the-subsampled-workshop-data","chapter":"6 Understanding our spatial data","heading":"6.5 Loading the subsampled workshop data","text":"use subsampled data workshop, three healthy control samples (HC)\nthree Crohn’s disease samples (CD).first four field views sample used.Analysing large data sets Sketch-based integrationWhen analysing data, often necessary work entire\ndata set rather arbitrary subsample, simple subsampling can omit\nimportant biological information spatial regions. However, processing \nlarge data sets can computationally demanding.Sketch-based analysis offers practical solution selecting representative\nsubset cells preserves overall structure diversity full\ndata set. Instead arbitrarily subsetting fields view (FoVs), \napproach uses geometric sketching capture common rare cell\npopulations. can perform initial preprocessing steps smaller subset\nextend results back complete dataset downstream analyses.details, see Seurat’s sketch-based analysis vignette2\\(^,\\)3 \nGeoSketch method description4 Python alternative.","code":"\n# Code to subset the data\nseurat_file_00_raw <- here(\"data\", \"GSE234713_CosMx_IBD_seurat_00_raw.RDS\")\nso_raw_full <- readRDS(seurat_file_00_raw)\nso_raw_subset <- so_raw_full[, so_raw_full$group %in% c(\"CD\", \"HC\") & so_raw_full@meta.data$fov <= 4]\nsaveRDS(so_raw_subset, here(\"data\", \"GSE234713_CosMx_IBD_seurat_00_raw_subsampled.RDS\"))\n# Load the prepared data\nso_path <- here(\"data\", \"GSE234713_CosMx_IBD_seurat_00_raw_subsampled.RDS\")\nso <- readRDS(so_path)"},{"path":"understanding-our-spatial-data.html","id":"visualising-our-spatial-data","chapter":"6 Understanding our spatial data","heading":"6.6 Visualising our spatial data","text":"TODO: add note plotting H&E image - unavailable data.Need import stutility, compatible v5 Seurathttps://satijalab.org/seurat/articles/spatial_vignetteXenium FOVsXenium uses wide-field fluorescence microscope automated image\nacquisition across larger, continuous imaging area. approach allows\nXenium map gene expression entire tissue region selected \nuser, rather stitching together multiple small, distinct FOV images.","code":"\nhc_idents <- unique(so$orig.ident)[1:3]\ncd_idents <- unique(so$orig.ident)[4:6]\nfor (i in hc_idents) {\n  p <- ImageDimPlot(so, fov = i, group.by = \"fov_name\", axes = T)\n  print(p)\n}\nfor (i in cd_idents) {\n  p <- ImageDimPlot(so, fov = i, group.by = \"fov_name\", axes = T)\n  print(p)\n}"},{"path":"understanding-our-spatial-data.html","id":"understanding-the-seuratobject","chapter":"6 Understanding our spatial data","heading":"6.6.1 Understanding the SeuratObject","text":"Seurat?Seurat objects data structure store count data additional metadata.\ndata high dimensional, important\nconnected information cells, samples, data stay connected\ndata analysis.frameworks scverse, data classes like anndata \nSpatialFeatureExperiment represent data differently, meet \nneeds . Differences compatibility tools.Flexibility across single-cell transcriptomics.Display Seurat object.999 features across 68624 samples 2 assays980 genes + 19 negprobes68.6k number segmented cells analysedTwo different types measurements, detailed belowActive assay: RNA (980 features, 0 variable features):RNA assay: Primary gene expression measurement data (counts)980 transcripts measuredNo variable features feature selection conducted yet6 layers present: counts.GSM7473682.HC., counts.GSM7473683.HC.b,\ncounts.GSM7473684.HC.c, counts.GSM7473688.CD., counts.GSM7473689.CD.b,\ncounts.GSM7473690.CD.cEach layer represents sample either HC CD donors. Required \ncomparison groups downstream1 assay present: negprobesThis secondary assay specifically stores counts corresponding negative\ncontrol probes. spatial transcriptomics, tracking control probes \ncrucial quality control, specificity assessment, defining background\nsignal.6 spatial fields view present: GSM7473682.HC.GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.GSM7473689.CD.b GSM7473690.CD.c:list six spatial fields view (FOVs) explicitly links spatial/image\ninformation stored Seurat object six specific samples/layers\nidentified . demonstrates data set ready spatially\nresolved analysis visualisation, allowing results (like cell clusters \ngene expression) mapped back onto original tissue sections \nsix integrated samples.CosMx FOVs sample namesNote field view names delimited .. time writing,\nunderscores cause functions fail silently. information,\nsee issue","code":"\nso## An object of class Seurat \n## 999 features across 68624 samples within 2 assays \n## Active assay: RNA (980 features, 0 variable features)\n##  6 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c\n##  1 other assay present: negprobes\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c"},{"path":"understanding-our-spatial-data.html","id":"exploring-the-metadata","chapter":"6 Understanding our spatial data","heading":"6.6.2 Exploring the metadata","text":"Along transcript counts per-cell, metadata tracks central\ninformation experimental details. important know \ngroups compare downstream (HC vs. UC). study one sample per slide,\ntypically . Examples metadata include:spatial coordinates cells genesSegmented cell boundariesWhich tissue sample FOV data belongs toTODO: Define terms like centroids, segments, fovSee: https://satijalab.org/seurat/articles/seurat5_spatial_vignette_2#mouse-brain-vizgen-merscopeTODO: Excalidraw theseDisplay metadata columns:lot information. Use something like skimr EDA \nunderstand field glanceTable 6.1: Data summaryVariable type: characterVariable type: numericExplain: number rows (68624) represents cellIdentify important metadata columns discuss meanThis dataset subset experimental data - first 4 fovs \n, CD HC sample groups.seurat fov = slide\nbruker cosmx fov = region slideView tissue_sample metadata prepare next step. represents","code":"\nhead(so@meta.data)##               orig.ident nCount_RNA nFeature_RNA fov cell_ID  Area AspectRatio\n## HC_a_1_1 GSM7473682.HC.a        366          187   1       1  6153        0.67\n## HC_a_2_1 GSM7473682.HC.a        805          283   1       2 16178        0.85\n## HC_a_3_1 GSM7473682.HC.a        118           73   1       3  3119        1.52\n## HC_a_4_1 GSM7473682.HC.a        106           59   1       4  3988        1.52\n## HC_a_5_1 GSM7473682.HC.a        462          207   1       5  4773        0.53\n## HC_a_6_1 GSM7473682.HC.a       1314          436   1       6 11588        0.87\n##          CenterX_local_px CenterY_local_px CenterX_global_px CenterY_global_px\n## HC_a_1_1             2119             3443          19274.56          173198.6\n## HC_a_2_1             1847             3404          19002.56          173159.6\n## HC_a_3_1             1986             3458          19141.56          173213.6\n## HC_a_4_1             2362             3454          19517.56          173209.6\n## HC_a_5_1             2159             3415          19314.56          173170.6\n## HC_a_6_1             1664             3402          18819.56          173157.6\n##          Width Height Mean.MembraneStain Max.MembraneStain Mean.PanCK Max.PanCK\n## HC_a_1_1    79    118                680              2218      17170     29735\n## HC_a_2_1   137    161                615              4453      16775     29702\n## HC_a_3_1    79     52                989              2827      24033     29662\n## HC_a_4_1    91     60                449              2099      13575     29651\n## HC_a_5_1    63    118               1002              2425      24946     29670\n## HC_a_6_1   116    134               1024              2320      25700     29712\n##          Mean.CD45 Max.CD45 Mean.CD3 Max.CD3 Mean.DAPI Max.DAPI cell\n## HC_a_1_1       198     9639      234    1237        20      131  1_1\n## HC_a_2_1       222    21371      234    1520        12      122  2_1\n## HC_a_3_1       171     6858      298    1721        13       58  3_1\n## HC_a_4_1       146      935      206    1402         6       56  4_1\n## HC_a_5_1       299     6387      330    1443        22      116  5_1\n## HC_a_6_1       354    23243      328    1610        23      113  6_1\n##          individual_code tissue_sample group        condition fov_name\n## HC_a_1_1            HC_a          HC_a    HC Healthy controls HC_a_001\n## HC_a_2_1            HC_a          HC_a    HC Healthy controls HC_a_001\n## HC_a_3_1            HC_a          HC_a    HC Healthy controls HC_a_001\n## HC_a_4_1            HC_a          HC_a    HC Healthy controls HC_a_001\n## HC_a_5_1            HC_a          HC_a    HC Healthy controls HC_a_001\n## HC_a_6_1            HC_a          HC_a    HC Healthy controls HC_a_001\n##          nCount_negprobes nFeature_negprobes\n## HC_a_1_1                2                  2\n## HC_a_2_1                5                  3\n## HC_a_3_1                1                  1\n## HC_a_4_1                0                  0\n## HC_a_5_1                3                  2\n## HC_a_6_1                8                  5\nnames(so@meta.data)##  [1] \"orig.ident\"         \"nCount_RNA\"         \"nFeature_RNA\"      \n##  [4] \"fov\"                \"cell_ID\"            \"Area\"              \n##  [7] \"AspectRatio\"        \"CenterX_local_px\"   \"CenterY_local_px\"  \n## [10] \"CenterX_global_px\"  \"CenterY_global_px\"  \"Width\"             \n## [13] \"Height\"             \"Mean.MembraneStain\" \"Max.MembraneStain\" \n## [16] \"Mean.PanCK\"         \"Max.PanCK\"          \"Mean.CD45\"         \n## [19] \"Max.CD45\"           \"Mean.CD3\"           \"Max.CD3\"           \n## [22] \"Mean.DAPI\"          \"Max.DAPI\"           \"cell\"              \n## [25] \"individual_code\"    \"tissue_sample\"      \"group\"             \n## [28] \"condition\"          \"fov_name\"           \"nCount_negprobes\"  \n## [31] \"nFeature_negprobes\"\nskimr::skim(so@meta.data)\ntable(so$tissue_sample)## \n##  CD_a  CD_b  CD_c  HC_a  HC_b  HC_c \n##  7539 13199 13606  8795 15766  9719"},{"path":"understanding-our-spatial-data.html","id":"count-data-assays","chapter":"6 Understanding our spatial data","heading":"6.7 Count data (assays)","text":"","code":"\nso@assays## $RNA\n## Assay (v5) data with 980 features for 68624 cells\n## First 10 features:\n##  TGFB3, PIGR, MALAT1, MZT2A, IL16, XBP1, S100A6, CCL2, CEACAM1, VSIR \n## Layers:\n##  counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c,\n## counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c \n## \n## $negprobes\n## Assay (v5) data with 19 features for 68624 cells\n## First 10 features:\n##  NegPrb19, NegPrb11, NegPrb5, NegPrb16, NegPrb3, NegPrb7, NegPrb12,\n## NegPrb8, NegPrb20, NegPrb15 \n## Layers:\n##  counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c,\n## counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c"},{"path":"understanding-our-spatial-data.html","id":"gene-expression-count-matrices","chapter":"6 Understanding our spatial data","heading":"6.7.1 Gene expression count matrices","text":"Row = geneColumn = cell sample","code":"\nso@assays$RNA$counts.GSM7473682.HC.a[1:5,1:5]## 5 x 5 sparse Matrix of class \"dgCMatrix\"\n##        HC_a_1_1 HC_a_2_1 HC_a_3_1 HC_a_4_1 HC_a_5_1\n## TGFB3         2        .        .        .        .\n## PIGR          3       12        1        2        3\n## MALAT1       24       35       10        6       24\n## MZT2A        12       11        6       12       17\n## IL16          2        .        .        .        ."},{"path":"understanding-our-spatial-data.html","id":"negative-probes","chapter":"6 Understanding our spatial data","heading":"6.7.2 Negative probes","text":"Explain negprobes negative controls see noisy data .\nbind anything etc.19 different negative probes.","code":"\nso@assays$negprobes## Assay (v5) data with 19 features for 68624 cells\n## First 10 features:\n##  NegPrb19, NegPrb11, NegPrb5, NegPrb16, NegPrb3, NegPrb7, NegPrb12,\n## NegPrb8, NegPrb20, NegPrb15 \n## Layers:\n##  counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c,\n## counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c\nrownames(so@assays$negprobes)##  [1] \"NegPrb19\" \"NegPrb11\" \"NegPrb5\"  \"NegPrb16\" \"NegPrb3\"  \"NegPrb7\" \n##  [7] \"NegPrb12\" \"NegPrb8\"  \"NegPrb20\" \"NegPrb15\" \"NegPrb13\" \"NegPrb23\"\n## [13] \"NegPrb10\" \"NegPrb9\"  \"NegPrb22\" \"NegPrb14\" \"NegPrb6\"  \"NegPrb21\"\n## [19] \"NegPrb18\"\nso@assays$negprobes[1:5, 1:5]## 19 x 8795 sparse Matrix of class \"dgCMatrix\"\n##                                                                           \n## NegPrb19 1 1 . . . . . 1 . . . . . . . . . . . . . . . . . . . . . . . 1 .\n## NegPrb11 1 . . . . . . . . 2 . . . . . . . . . . . . . . . 1 . 1 . . . . .\n## NegPrb5  . 2 . . . 2 . . . . . . . . . . . . . . . . . . 1 . . . . . . . .\n## NegPrb16 . 2 . . . 1 . 2 . . . 1 . . . . . . . . . . . . . . . . 1 . . . .\n## NegPrb3  . . 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n## NegPrb7  . . . . 1 . 1 . . . . . . 1 . . . . . . . . . . . . . . . . . . .\n## NegPrb12 . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n## NegPrb8  . . . . . 2 . . . . 1 . . . . . . . . . . . . . . . . . . . . . 1\n## NegPrb20 . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . .\n## NegPrb15 . . . . . 1 . . . . . . . 2 . . . . . . . . . . . . . . . . . . .\n## NegPrb13 . . . . . . . . 1 . . 1 . . . . . . . . . . . . . . . 1 . . . . .\n## NegPrb23 . . . . . . . . . 1 . . . . 1 . . . . . . . . . . . . 1 . . . . 1\n## NegPrb10 . . . . . . . . . 1 . . . . . . . . . . . . . . . . . . . . . . .\n## NegPrb9  . . . . . . . . . . . . 1 . . . . . . . . . . . . . . . . . . . .\n## NegPrb22 . . . . . . . . . . . . . 1 1 . 1 . . . . . . . . . . . . . . . .\n## NegPrb14 . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . .\n## NegPrb6  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n## NegPrb21 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n## NegPrb18 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n##                \n## NegPrb19 ......\n## NegPrb11 ......\n## NegPrb5  ......\n## NegPrb16 ......\n## NegPrb3  ......\n## NegPrb7  ......\n## NegPrb12 ......\n## NegPrb8  ......\n## NegPrb20 ......\n## NegPrb15 ......\n## NegPrb13 ......\n## NegPrb23 ......\n## NegPrb10 ......\n## NegPrb9  ......\n## NegPrb22 ......\n## NegPrb14 ......\n## NegPrb6  ......\n## NegPrb21 ......\n## NegPrb18 ......\n## \n##  .....suppressing 8762 columns in show(); maybe adjust options(max.print=, width=)\n##  .............................."},{"path":"understanding-our-spatial-data.html","id":"loading-in-multiple-samples","chapter":"6 Understanding our spatial data","heading":"6.8 Loading in multiple samples","text":"TODO: Example loading multiple samplesTODO: Explanation splitting merging layers","code":""},{"path":"understanding-our-spatial-data.html","id":"summary","chapter":"6 Understanding our spatial data","heading":"6.9 Summary","text":"TODO","code":""},{"path":"quality-control-and-filtering.html","id":"quality-control-and-filtering","chapter":"7 Quality control and filtering","heading":"7 Quality control and filtering","text":"","code":""},{"path":"quality-control-and-filtering.html","id":"learning-objectives-2","chapter":"7 Quality control and filtering","heading":"7.1 Learning objectives","text":"Recall common quality control (QC) metrics used spatial transcriptomics, total transcript counts, detected genes, cell area, negative probe percentageRecall sources technical artefacts (e.g. segmentation errors, low RNA capture, border effects) consider QCDescribe role negative control probes quantifying background noise imaging-based technologies like CosMxGenerate interpret QC visualisations (e.g. density plots, bivariate scatterplots, FOV summaries) identify low-quality cellsEvaluate filtering thresholds affect biological interpretation, distinguishing true low-quality cells biologically small lowly expressed cell typesJustify appropriate sample-specific filtering thresholds metrics minimum transcript counts maximum negative probe percentage","code":""},{"path":"quality-control-and-filtering.html","id":"overview-2","chapter":"7 Quality control and filtering","heading":"7.2 Overview","text":"Basic QC plots + filtering (20min)(Negative probes using cosmx)Identify low quality cellsRead subsampled seurat object.","code":"\nknitr::opts_chunk$set(\n  echo = TRUE,\n  warning = FALSE\n)\n\n# load libraries for this step\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(here)\n# Read in the subsampled data for this lesson\nso_path <- here(\"data\", \"GSE234713_CosMx_IBD_seurat_00_raw_subsampled.RDS\")\nso <- readRDS(so_path)"},{"path":"quality-control-and-filtering.html","id":"identifying-potential-technical-artefacts","chapter":"7 Quality control and filtering","heading":"7.3 Identifying potential technical artefacts","text":"Library size (total transcripts) cell areas good indicators technical\nartefacts introduced data generation steps.Possible artefacts can include:Low quality cellsCell segmentation challenges (combining two cells, aligned real cell\nboundaries, leading high cell area low RNA count)Understanding prevalent data can help biological\ninterpretation downstream. example, discerning whether differences cells\ndue e.g. cell type differences, technical artefacts.first view library size cell area distributions .","code":""},{"path":"quality-control-and-filtering.html","id":"library-size-transcript-counts","chapter":"7 Quality control and filtering","heading":"7.3.1 Library size (transcript counts)","text":"transcripts per cell display log-normal distribution shifting medians.Indicates largely low-quality cells, good example library size\neffects normalised downstream, prior analyses.","code":"\nggplot(so@meta.data, aes(x = nCount_RNA, col = tissue_sample)) +\n  geom_density() +\n  scale_x_log10() +\n  theme_bw() +\n  annotation_logticks(sides = \"b\", colour = \"lightgrey\") +\n  ggtitle(\"Transcript counts per cell\")"},{"path":"quality-control-and-filtering.html","id":"cell-surface-area","chapter":"7 Quality control and filtering","heading":"7.3.2 Cell surface area","text":"Areas also follow log-normal distributions medians ranging 3,000 -\n4,000px^2. Sample/FOV CD.c slightly smaller cell area median\n~2,000px^2.","code":"\n# Total counts per cell\nggplot(so@meta.data, aes(x=Area, col=tissue_sample)) +\n  geom_density() +\n  scale_x_log10() +\n  theme_bw() +\n  annotation_logticks(sides = \"b\") +\n  ggtitle(\"Area (px^2) per cell\")"},{"path":"quality-control-and-filtering.html","id":"bivariate-qc","chapter":"7 Quality control and filtering","heading":"7.4 Bivariate QC","text":"next plot compares total transcript counts (nCount_RNA) number \ndetected genes (nFeature_RNA) sample. strong positive relationship\nindicates captured transcripts successfully mapped known genes,\nreflecting good data quality sound probe hybridisation.small subset cells deviates trend - typically low total counts. suggests low-quality cells tissue sample, rather widespread technical artefacts.Accounting variation cell sizesCautious samples highly variable varying sizes. Total transcript\ncounts cell areas can vary substantially. Applying “standard” QC \nfiltering thresholds uniformly across cells may remove valid cells.Fig 3. Hatton et al. (2023): Distribution cell mass (g) across different cell types.following plot shows relationship total transcript counts\n(nCount_RNA) cell area across samples. tissue samples (Seurat FOVs),\nlarger cells generally contain transcripts, forming positive log-log\ncorrelation.However, samples (HC., HC.c, CD., CD.c) display greater\nvariability subset small, high-transcript cells, may indicate\nsegmentation artefacts biological differences presence smaller immune cells.","code":"\nso@meta.data %>%\n  ggplot(aes(x = nCount_RNA, y = nFeature_RNA, colour = tissue_sample)) +\n  geom_point(alpha = 0.4, size = 0.1) +\n  facet_wrap(~tissue_sample) +\n  theme_light() +\n  theme(legend.position = \"none\")\nggplot(so@meta.data, aes(x=Area, y=nCount_RNA, colour=tissue_sample)) +\n  geom_point(size = 0.1, alpha = 0.4) +\n  scale_x_log10() +\n  scale_y_log10() +\n  annotation_logticks(sides = \"bl\") +\n  facet_wrap(~tissue_sample) +\n  annotation_logticks(colour = \"lightgrey\") +\n  theme_light()"},{"path":"quality-control-and-filtering.html","id":"filtering-low-quality-cells","chapter":"7 Quality control and filtering","heading":"7.5 Filtering low-quality cells","text":"","code":""},{"path":"quality-control-and-filtering.html","id":"negative-probes-as-an-indicator-of-noise","chapter":"7 Quality control and filtering","heading":"7.5.1 Negative probes as an indicator of noise","text":"Spatial transcriptomics assays include RNA-specific probes, negative\ncontrol probes (, background probes). RNA specific-probes hybridise \nspecific targets, negative probes bind anything. primary purpose\nquantify account technical noise non-specific signal.step, calculate proportion negative control probes\nrelative total counts (RNA) cell. Cells exhibiting high\npercentage noise (.e., high proportion negative probe counts) can \nflagged removed QC stage.Key metrics add Seurat object:$percent_neg: percentage negative probes per cellso$mean_neg: average negative probes per cellThe bar plot shows samples (CD_b, CD_c, HC_b) higher\naverage negative probe counts, suggesting variable levels noise across\nslides.However, displaying summary metrics alone, average may \ncapture variation data, may skewed. density plot illustrates cells\nacross samples low levels background signal, indicated small proportion negative\nprobes (medians across samples < 2%). overall data quality\nappears high, minor shifts suggest minimal -sample variation.","code":"\nso$percent_neg <- (so$nCount_negprobes / (so$nCount_RNA + so$nCount_negprobes)) * 100\n\n# Join layers to calculate average_neg\nso@assays$negprobes <- JoinLayers(so@assays$negprobes)\nso$mean_neg <- colMeans(so@assays$negprobes) # Only defined first sample\nso@meta.data %>%\n  ggplot(aes(x = tissue_sample, y = mean_neg, colour = tissue_sample)) +\n  geom_col() +\n  theme_light()\nso@meta.data %>%\n  ggplot(aes(x = percent_neg, colour = tissue_sample)) +\n  geom_density() +\n  scale_x_log10() +\n  theme_light() +\n  annotation_logticks(sides = \"b\", colour = \"lightgrey\")\n# Discuss difference with Xenium - xenium lower counts, lower background.\nggplot(so@meta.data, aes(y=mean_neg, x=nCount_RNA)) +\n  geom_point(pch=3, alpha=0.1) +\n  scale_x_log10() +\n  theme_bw() +\n  ggtitle(\"Negative probes vs counts\")\nggplot(so@meta.data, aes(y=percent_neg, x=nCount_RNA)) +\n  geom_point(pch=3, alpha=0.1) +\n  scale_x_log10() +\n  coord_cartesian(ylim = c(0, 10)) +\n  facet_wrap(~tissue_sample) +\n  theme_bw() +\n  ggtitle(\"Negative probes vs counts\")\nmin_ncount_rna <- 90\nmax_percent_neg <- 2\nggplot(so@meta.data, aes(y=percent_neg, x=nCount_RNA)) +\n  geom_point(pch=3, alpha=0.1) +\n  geom_hline(yintercept = max_percent_neg, lty=3, colour = \"red\") +\n  geom_vline(xintercept = min_ncount_rna, lty=3, colour = \"red\") +\n  scale_x_log10() +\n  coord_cartesian(ylim = c(0, 21)) +\n  facet_wrap(~tissue_sample) +\n  theme_bw() +\n  ggtitle(\"Negative probes vs counts\")"},{"path":"quality-control-and-filtering.html","id":"identifying-filtering-thresholds","chapter":"7 Quality control and filtering","heading":"7.5.2 Identifying filtering thresholds","text":"Nearly 50% cells HC.c filtered , display cells \nremoved.stromal compartment removed entirely can difficult \nco-localisation analyses. , epithelial compartment bottom left\nFOV patchy.","code":"\n# Apply a filter\nso@meta.data <- \n  so@meta.data %>%\n  mutate(\n    qc = if_else(nCount_RNA >= min_ncount_rna & percent_neg <= max_percent_neg, \"Keep\", \"Remove\")\n  )\n\ntable(so$qc, so$orig.ident)##         \n##          GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a\n##   Keep              6811           14002            5326            4216\n##   Remove            1984            1764            4393            3323\n##         \n##          GSM7473689.CD.b GSM7473690.CD.c\n##   Keep             12479            8636\n##   Remove             720            4970\nImageDimPlot(so, fov = \"GSM7473684.HC.c\", group.by = \"qc\")"},{"path":"quality-control-and-filtering.html","id":"activity-identifying-your-own-filtering-thresholds","chapter":"7 Quality control and filtering","heading":"7.6 ACTIVITY: Identifying your own filtering thresholds","text":"TODO: Hide block, summarise tips/hintsYou seen example stringent filtering omits key cells \ncompartments.Identify suitable threshold min_ncount_rna max_percent_neg \niteratively:Changing thresholds min_ncount_rna max_percent_negDisplaying bivariate distribution nCount_RNA percent_neg per\ntissue sampleUsing ImageDimPlot visualise cells removed","code":"\nmin_ncount_rna <- 70\nmax_percent_neg <- 4\nggplot(so@meta.data, aes(y=percent_neg, x=nCount_RNA)) +\n  geom_point(pch=3, alpha=0.1) +\n  geom_hline(yintercept = max_percent_neg, lty=3, colour = \"red\") +\n  geom_vline(xintercept = min_ncount_rna, lty=3, colour = \"red\") +\n  scale_x_log10() +\n  coord_cartesian(ylim = c(0, 21)) +\n  facet_wrap(~tissue_sample) +\n  theme_bw() +\n  ggtitle(\"Negative probes vs counts\")\nso@meta.data <- \n  so@meta.data %>%\n  mutate(\n    qc = if_else(nCount_RNA >= min_ncount_rna & percent_neg <= max_percent_neg, \"Keep\", \"Remove\")\n  )\n\ntable(so$qc, so$orig.ident)##         \n##          GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a\n##   Keep              7411           14774            6456            5070\n##   Remove            1384             992            3263            2469\n##         \n##          GSM7473689.CD.b GSM7473690.CD.c\n##   Keep             12839           10303\n##   Remove             360            3303\n# Epithelial compartment less patchy, but still hard to retain the stromal cells\n# These are the trade-offs to consider\nImageDimPlot(so, fov = \"GSM7473684.HC.c\", group.by = \"qc\")\n# A lot of cells marked for removal and a bit patchy\nImageDimPlot(so, fov = \"GSM7473688.CD.a\", group.by = \"qc\")"},{"path":"quality-control-and-filtering.html","id":"applying-the-filter","chapter":"7 Quality control and filtering","heading":"7.6.1 Applying the filter","text":"purposes workshop, use threshold.","code":"\nmin_ncount_rna <- 70\nmax_percent_neg <- 4\nso_filtered <- subset(so, qc == \"Keep\")\ntable(so_filtered$orig.ident)## \n## GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b \n##            7411           14774            6456            5070           12839 \n## GSM7473690.CD.c \n##           10303\nsaveRDS(so_filtered, file = here(\"data\", \"GSE234713_CosMx_IBD_seurat_02_rna70_neg4.RDS\"))"},{"path":"quality-control-and-filtering.html","id":"field-of-view-qc-cosmx-only-advanced","chapter":"7 Quality control and filtering","heading":"7.7 Field of View QC (CosMX only; Advanced)","text":"Good check library sizes across FOVs - red flags include FOVs close \ncells.TODO: well border effects. Run per sample.","code":"\nso@meta.data %>%\n  unite(col = unique_fov_names, orig.ident, fov, remove = F) %>%\n  ggplot(aes(x = nCount_RNA, col = orig.ident, group = unique_fov_names)) +\n  geom_density() +\n  scale_x_log10() +\n  theme_light() +\n  annotation_logticks(sides = \"b\")\n# For each cell, calculate the distance between the centroid to each FOV border\nso_borders <- so@meta.data %>%\n  group_by(tissue_sample, fov) %>%\n  mutate(\n    top = max(CenterY_local_px) - CenterY_local_px,\n    bottom = CenterY_local_px - min(CenterY_local_px),\n    left = CenterX_local_px - min(CenterX_local_px),\n    right = max(CenterX_local_px) - CenterX_local_px\n  ) %>%\n  select(top, bottom, left, right, nCount_RNA, tissue_sample) %>%\n  pivot_longer(cols = -c(nCount_RNA, tissue_sample), names_to = \"fov_direction\", values_to = \"distance\") \n\nso_borders %>%\n  ggplot(aes(x = distance, y = nCount_RNA)) +\n  geom_point(size = 0.1, alpha = 0.4) +\n  facet_wrap(~fov_direction, ncol = 4) +\n  scale_y_log10() +\n  theme_light() +\n  geom_smooth(method = \"loess\", span = 0.2)"},{"path":"quality-control-and-filtering.html","id":"summary-1","chapter":"7 Quality control and filtering","heading":"7.8 Summary","text":"Quality control (QC) spatial transcriptomics highly iterative \ncontext-dependent process. requires continual exploration data rather\nfollowing prescriptive set rules. examining filtering \ndata first time, recommend setting permissive threshold \nmeaningful cells removed. preliminary look data, QC steps\ncan revisted.comparison older transcriptomics technologies, spatial technologies introduce\nnew sources technical variation can make interpretation results\ntricky, even obscure true, biological signals data. \nneed filter every step, useful understand potential sources\nbias, inform subsequent rounds QC.Sources technical variation also platform dependent \naccounted . example, CosMx contains FOVs adds another dimension,\ncompared Xenium.Quality control step conduct pre-processing pipeline.\nThroughout following steps workshop, continue conduct QC\nsteps.","code":""},{"path":"normalisation-and-scaling.html","id":"normalisation-and-scaling","chapter":"8 Normalisation and scaling","heading":"8 Normalisation and scaling","text":"","code":""},{"path":"normalisation-and-scaling.html","id":"learning-objectives-3","chapter":"8 Normalisation and scaling","heading":"8.1 Learning objectives","text":"","code":""},{"path":"normalisation-and-scaling.html","id":"overview-3","chapter":"8 Normalisation and scaling","heading":"8.2 Overview","text":"Normalisation scaling important processing steps analysing\ntranscriptomics data, particulary single-cell RNA sequencing (scRNA-seq)\nspatial transcriptomics (ST). serve different purposes aim\nadjust technical variation cells comparable. important accurate clustering analysis tasks.Goal: capture biology.Normalisation: Different cells different total target counts. Normalisation allows comparable.Identification highly variable features (feature selection) Identifying variable features allows retaining real biological variability data reduce noise data.Scaling data: Highly expressed genes can overpower signal less expressed genes equal importance. Within cell assumption underlying RNA content constant.","code":""},{"path":"normalisation-and-scaling.html","id":"selecing-a-normalisation-approach","chapter":"8 Normalisation and scaling","heading":"8.3 Selecing a normalisation approach","text":"choice normalisation method can big impact biological\ninterpretation downstream analysis steps. Therefore, important\nconsider selecting suitable approach based data, questions\nwant answer.Unlike scRNA-seq, cells treated independent observations, ST data\nspatial patterns need accounted scRNA-seq\nnormalisation misses. patterns include probe capture performance,\ndifferences cell morphology heterogeneous tissue architecture.sources include gene panel skew.RecommendationsTrade-simplicity performance methods.-depth discussion normalisation ST data sets benchmarks,\nrefer following resources:OSTA\nAtta et al. (2024)Bhuva et al. (2024)Inspect current RNA assay. Layers counts.* sample/FOV.default, use ‘LogNormalize’ method seurat - described NormaliseData function help:“LogNormalize: Feature counts cell divided total counts cell multiplied scale.factor. natural-log transformed using log1’”displaying RNA counts assay , note new\ndata layers. represent (log-)normalised data.don’t always want normaliseNormalise:dimensionality reduction clusteringIntegration batch correctionCell annotation, label transferDon’t: analyses thatUnnormalised, minimally normalised counts:raw transcript counts required apply \nnormalisation method. Used preserve spatial trends\nnormalisation can remove e.g.Identifying spatially variable genes - Moran’s IReporting gene expression values across cellsThis important store counts data\nlayers data object.","code":"\nso@assays$RNA## Assay (v5) data with 980 features for 56853 cells\n## First 10 features:\n##  TGFB3, PIGR, MALAT1, MZT2A, IL16, XBP1, S100A6, CCL2, CEACAM1, VSIR \n## Layers:\n##  counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c,\n## counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c\nso <- NormalizeData(so, assay = \"RNA\", normalization.method = \"LogNormalize\")\nso@assays$RNA## Assay (v5) data with 980 features for 56853 cells\n## First 10 features:\n##  TGFB3, PIGR, MALAT1, MZT2A, IL16, XBP1, S100A6, CCL2, CEACAM1, VSIR \n## Layers:\n##  counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c,\n## counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c,\n## data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c,\n## data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c"},{"path":"normalisation-and-scaling.html","id":"identifying-highly-variable-genes-hvg","chapter":"8 Normalisation and scaling","heading":"8.4 Identifying highly variable genes (HVG)","text":"genes vary cell types/states sample?don’t yet know anything celltypes stats, can make assumption genes high variance probably reflecting biological state. contrast ‘housekeeper’ gene even expression across cell types won’t helpful grouping cells.data split sample, seurat identify variable genes within sample combine information. seurat5 documentation layers:“Note since data split layers, normalization variable feature identification performed batch independently (consensus set variable features automatically identified).”point represents one gene - red ones top 200 ‘highly variable genes’ HVGs. firm rule many HVGs want. whole transcriptome 2000, 1000 genes 200. exact number doesn’t matter much; long capture genes main group low variance genes.can list genes:","code":"\nso <- FindVariableFeatures(so, nfeatures = 200)\nVariableFeaturePlot(so)\nhead(VariableFeatures(so))## [1] \"IGHM\"   \"IGHG1\"  \"TPSB2\"  \"IGHG2\"  \"JCHAIN\" \"TPSAB1\""},{"path":"normalisation-and-scaling.html","id":"scale-data","chapter":"8 Normalisation and scaling","heading":"8.5 Scale data","text":"default, scaleData function scale HVGs.Note presence single ‘scale.data’ layer.Save object","code":"\nso <- ScaleData(so) # Just 200 variable features\nso## An object of class Seurat \n## 999 features across 56853 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c\nsaveRDS(so, file = here(\"data\", \"GSE234713_CosMx_IBD_seurat_03_normalised.RDS\"))"},{"path":"ReducedDimensionality.html","id":"ReducedDimensionality","chapter":"9 Reduce dimensionality - UMAPs","heading":"9 Reduce dimensionality - UMAPs","text":"dive generating UMAP plots visualise spatial data need undertake series preprocessing steps. steps essential transforming raw, high-dimensional data form can meaningfully interpreted.steps needed?Normalisation Different cells different total target counts. Normalisation allows comparable.Identification highly variable features (feature selection) Identifying variable features allows retaining real biological variability data reduce noise data.Scaling data: Highly expressed genes can overpower signal less expressed genes equal importance. Within cell assumption underlying RNA content constant.Dimensionality reduction (PCA): Imagine gene represents dimension - axis plot. plot expression two genes simple scatter plot. genome gene panel 100s 1000s genes - collate information genes way allows visualise 2 dimensional image. dimensionality reduction comes , calculate meta-features contains combinations variation different genes. hundreds genes, end 10s meta-featuresRun non-linear dimensional reduction (UMAP): Finally, make UMAP plot arranges cells logical easy visualise way. Note tSNE algorithm (makes tSNE plots) older alternative method UMAP.","code":""},{"path":"ReducedDimensionality.html","id":"reload-data","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.1 Reload data","text":"get started, lets launch fresh R session, load libraries need Seurat object form yesterday.","code":"\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(here)\n\n\nnormalised_seurat_object_file <- here(\"data\", \"GSE234713_CosMx_IBD_seurat_03_normalised.RDS\")\nso    <- readRDS(normalised_seurat_object_file) "},{"path":"ReducedDimensionality.html","id":"pca","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.2 PCA","text":"single-cell (spatial) RNA data highly dimensional - even 200 highly variable genes (might 200 experiments!). Dimension reduction PCA recommended summarising data based amount variation (global differences). produce ‘principal component’ values summarise expression fewer dimension, use values downstream analyses.Now ‘pca’ reduction listed object.peeking seurat object, can see value PC (Principal Component) cell.contexts (e.g. Bulk RNAseq experiments), PCs can enough group explore difference samples. e.g. See plot DEseq2 documentation.can try , sheer number cells diversity among , rarely works spatial single cell datasets - simply blob.PC1 vs PC2.","code":"\nso <- RunPCA(so, features = VariableFeatures(so))\nso## An object of class Seurat \n## 999 features across 56853 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  1 dimensional reduction calculated: pca\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c\nso@reductions$pca@cell.embeddings[1:10,1:5]##                PC_1       PC_2       PC_3       PC_4      PC_5\n## HC_a_1_1  -6.148807 -2.0908949 -0.4825868  0.4346447 -2.251673\n## HC_a_2_1  -7.765302 -6.2518662  1.8308806  0.9827992 -4.352795\n## HC_a_3_1  -4.965210  0.4225925  0.2818806 -1.0218902 -4.467894\n## HC_a_4_1  -3.837060  1.6575017  0.4302138 -0.1013677 -2.870886\n## HC_a_5_1  -6.549506 -3.6873409 -0.1546158  0.5736327 -4.347325\n## HC_a_6_1  -6.059822 -7.1218463  1.3389979  0.2461749 -3.405665\n## HC_a_7_1  -5.609824 -2.5791504  0.4295388  1.1227985 -4.756035\n## HC_a_8_1  -7.076313 -4.6975718 -0.3541234  2.3167606 -3.176212\n## HC_a_9_1  -7.019115 -3.1431556  0.3734391  0.2201073 -4.555789\n## HC_a_10_1 -6.518847 -3.6272531 -0.1846131  2.5870675 -5.700536\nDimPlot(so, reduction = \"pca\", group.by='tissue_sample')"},{"path":"ReducedDimensionality.html","id":"umap","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.3 UMAP","text":"UMAP (Uniform Manifold Approximation Projection) method summarising\nmultiple principal components fewer dimensions visualisation - generally just x y.UMAP :Non-linear: Distances cells PCA linear, whereas UMAP non-linear. .e. larger distance two cells necessarily mean greater transcriptional difference.Non-deterministic: data produce different layout, though generally functions use set random numbers avoid . Even - removing just one cell shuffle result, nearly impossible task reproduce existing UMAP! General trends remain stable.interested exploring UMAP works , Understanding UMAP page excellent interactive resource. -depth discussion can sometimes misinterpreted see Biologists, stop putting UMAP plots papers.build UMAP need decide many principal components want summarise. ‘elbow plot’ shows proportion variance explained PC - starting PC1 - always explains . Eventually variance explained drops base level - extra PCs aren’t adding much .general rule thumb pick standard variation levels plot - ‘elbow’. harm rounding . Typically 10-20, higher complex datasets.choose 15.build UMAP first 15 PCs.plot - coloured tissue sample.","code":"\nElbowPlot(so)\nnum_dims <- 15\nso <- RunUMAP(so, dims=1:num_dims)\n# you can specify reduction='umap' explicitly\n# DimPlot(so, group.by='tissue_sample', reduction = 'umap') \n# But by default, if a umap exists in the object, Dimplot will plot it.\nDimPlot(so, group.by='tissue_sample') "},{"path":"ReducedDimensionality.html","id":"using-umap-to-visualise-your-data","chapter":"9 Reduce dimensionality - UMAPs","heading":"9.4 Using UMAP to visualise your data","text":"Now time plot interesting looking metadata UMAP.QC : Slide, total RNA, negative probes, slide, batchExperimental: Groups, samples, timepoint, treatment, mouseWe want identify trends biases technical experimentally interesting.View categorical factors ‘DimPlot’, continuous ‘FeaturePlot’. split.parameter quite useful separate certain variables, like experimental group.little separation condition - appears due individual (’ll address next).metadata contains number total counts per cell (nCount_RNA) total negative probe counts per cell (nCount_negprobes). can see negative probe counts line total counts. higher counts concentrated certain regions UMAP.overall % negative probes random.Likewise, can also helpful/fun plot genes point.can provide list things might think interesting identify cell types expect see. show PIGR intestinal epithelial marker, CD74 IGHA1 immune roles NRG1 discussed paper.","code":"\nDimPlot(so, group.by='tissue_sample')\nDimPlot(so, group.by='condition')\nDimPlot(so, group.by='tissue_sample', split.by='condition')\nFeaturePlot(so, 'nCount_RNA') \nFeaturePlot(so, 'nCount_negprobes') \nso$pc_neg <- so$nCount_negprobes / (so$nCount_negprobes + so$nCount_RNA) * 100\nFeaturePlot(so, 'pc_neg') \nFeaturePlot(so, c('CD74','PIGR','IGHA1','NRG1'), ncol=2 )"},{"path":"BatchCorrection.html","id":"BatchCorrection","chapter":"10 Batch Correction","heading":"10 Batch Correction","text":"generally want compare analyse matched cell types (cell states) across different experimental groups. transcriptional differences individuals batch effects preparation slide can introduce unwanted variation makes hard see cell type differences. can address batch correction integration methods.good description integration methods choose , Single cell best practicies, integration, review batch correction methods single cell data Antonsson Melsted (2025).","code":""},{"path":"BatchCorrection.html","id":"do-we-need-batch-correction","chapter":"10 Batch Correction","heading":"10.1 Do we need batch correction?","text":"regions UMAP can see separation sample. common spatial data, especially working human data.example isn’t bad, purposes work, go process batch correction.course - separation aligns biological groups interest, correction may appropriate; e.g. knockout can mean particular celltype never forms, region wild-type samples. Consider ’s going experiment!Additionally, batch effects can occur different variables. experiment one sample per slide, batch effect seen level. multiple samples per slide, need identify batch effect slide sample () level, split data level split() function. data already split sample/slide - can continue .becomes obvious split plot sample well;continue cell clustering analysis point, might find build clusters around individual samples.","code":"\np.uncorrected <- DimPlot(so, group.by='tissue_sample')\np.uncorrected\nDimPlot(so, group.by='tissue_sample', split.by = 'tissue_sample', ncol = 3)"},{"path":"BatchCorrection.html","id":"running-batch-correction","chapter":"10 Batch Correction","heading":"10.2 Running batch correction","text":"can apply batch correction integration method adjust principal components de-emphasise -sample effect. Seurat implements several methods, full ‘Introduction scRNA-seq integration’ vignette. use ‘harmony’ method, Korsunsky et al 2019.worth noting methods can applied combine data multiple experiments (e.g. public data), even technologies!can one computationally intensive steps analysis. can take hours run use many Gb RAM, scaling size experiment. small subset, take minute two.Looking summary seurat object see 3x dimensional reductions:pca : original principal components, batch correction.harmony : harmony output, values like PCA, adjusted batch correction.umap : new umap based harmony. overwrote old UMAP.downstream analyses may use batch corrected data also e.g. clustering. rule thumb, methods use PCA ( multi-gene-summary ) use adjusted harmony scores instead, e.g clustering. counts normalised assays remain unchanged - methods use directly (e.g. differential expression, plotting) need handle batch correction way (e.g. modelling batch).plotting new UMAP, samples move overlayed. better visualisation, means clusters biased samples.Though, still per-sample difference.","code":"\n# Run harmony \nso <- IntegrateLayers(so, method = HarmonyIntegration, orig.reduction = \"pca\", new.reduction = \"harmony\")\n# Make a new UMAP, using the harmony values.\nso <- RunUMAP(so, dims=1:num_dims, reduction = 'harmony')\nDimPlot(so, group.by='tissue_sample')\nso## An object of class Seurat \n## 999 features across 56853 samples within 2 assays \n## Active assay: RNA (980 features, 200 variable features)\n##  13 layers present: counts.GSM7473682.HC.a, counts.GSM7473683.HC.b, counts.GSM7473684.HC.c, counts.GSM7473688.CD.a, counts.GSM7473689.CD.b, counts.GSM7473690.CD.c, data.GSM7473682.HC.a, data.GSM7473683.HC.b, data.GSM7473684.HC.c, data.GSM7473688.CD.a, data.GSM7473689.CD.b, data.GSM7473690.CD.c, scale.data\n##  1 other assay present: negprobes\n##  3 dimensional reductions calculated: pca, umap, harmony\n##  6 spatial fields of view present: GSM7473682.HC.a GSM7473683.HC.b GSM7473684.HC.c GSM7473688.CD.a GSM7473689.CD.b GSM7473690.CD.c\np.corrected <- DimPlot(so, group.by='tissue_sample')\np.uncorrected + p.corrected\nDimPlot(so, group.by='tissue_sample', split.by = 'tissue_sample', ncol = 3)"},{"path":"clustering.html","id":"clustering","chapter":"11 Clustering","heading":"11 Clustering","text":"analysis, want able examine different cell types cell states data. Sadly cells don’t come labelled, ‘celltypes’ aren’t firm classifications anyway!\ncan group together cells similar expression profiles ‘clusters’, can analyse.","code":""},{"path":"clustering.html","id":"generate-clusters","chapter":"11 Clustering","heading":"11.1 Generate Clusters","text":"generate clusters, first build ‘neighbourhood’ graph. network graph, links cells basis transcriptional similarity (‘neighbours’). something looking directly, simply stored inside object, important input downstream steps like clustering.Forget run ’ll generate error.Note need specify ‘harmony’ reduction, else default ‘pca’. Just like UMAP, want clusters represent different cell types states, differences individuals.Now clustering can simple running ‘FindClusters’.clustree package can useful tool evaluate different levels clustering. example use context single cell transcriptomics.ACTIVITY clustering resolution choose?hard, experiment!information want decide? Perhaps consider work.E.g. looking known celltype marker FeaturePlot() help? E.g. PIGR expressed intestinal epithelialPut question plot google doc.real life, choosing clustering resolution can cyclic process cell type labelling. ‘correct’ level clustering one lets answer biological questions interested . broad ’ll heterogeneity clusters, specific ’ll somewhat arbitrary clusters cells test anything. may need use different levels clustering different analyses, choose make sub-clusters one particular celltype interest.rest workshop, ’ll use stick resolution 0.8 - actually default. ran one last, stored ‘seurat_clusters’check clusters balanced across samplesSpatially aware clustering methodsHere using method based purely cells transcriptome. may perfer investigate use spatially-aware clustering tool semanticST others (rapidly progressing feild).","code":"\nso <- FindNeighbors(so, reduction = \"harmony\", dims = 1:15)\n# Resolution generally between 0.1 and 1\nso <- FindClusters(so, resolution = 0.2 )  # A low resolution, fewer clusters## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 56853\n## Number of edges: 1324833\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.9010\n## Number of communities: 6\n## Elapsed time: 46 seconds\nso <- FindClusters(so, resolution = 1.0 )  # high res for more## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 56853\n## Number of edges: 1324833\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.8011\n## Number of communities: 14\n## Elapsed time: 43 seconds\nso <- FindClusters(so, resolution = 0.8 ) # the default resolution  ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 56853\n## Number of edges: 1324833\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.8216\n## Number of communities: 11\n## Elapsed time: 41 seconds\nDimPlot(so, group.by='RNA_snn_res.0.2')\nDimPlot(so, group.by='RNA_snn_res.0.8')\nDimPlot(so, group.by='RNA_snn_res.1')\nlibrary(clustree)\nclustree(so)\nso <- FindClusters(so, resolution = 0.8)  # Rerun if you've been trying other resolutions\nDimPlot(so, group.by='seurat_clusters')\n## Celltype proportions\ncelltype_summary_table<- so@meta.data %>% as_tibble() %>%\n  group_by(condition, tissue_sample, seurat_clusters ) %>%\n  summarise(n_cells = n())\n\n\n\nggplot(celltype_summary_table, aes(x=tissue_sample, y=n_cells, fill=seurat_clusters)) +\n  geom_bar(position=\"fill\", stat=\"identity\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0,0)) +\n  ggtitle( \"Celltype composition\") +\n  facet_wrap(~condition, ncol = 1, scales = 'free_y')"},{"path":"ClusterLabelling.html","id":"ClusterLabelling","chapter":"12 Clustering Labeling","heading":"12 Clustering Labeling","text":"Classifying cells meaningful celltypes (cell states) time consuming, extremely important, part spatial analysis.may involve pulling together multiple lines evidence assign celltype labels cluster labels. approaches outlined :","code":""},{"path":"ClusterLabelling.html","id":"cluster-markers","chapter":"12 Clustering Labeling","heading":"12.1 Cluster Markers","text":"Considering clusters - lets find meaningful labels 1-10! genes expresses specifically clusters?‘FindAllMarkers’ function runs differential expression test see genes expressed differently celltype rest experiment. ‘.pos’ parameter useful report genes enriched (absent) cluster.Now list ‘marker’ genes. ’re markers sense canonical celltype markers - ’re just defined data.Look p-values! ’re extremely significant cell treated replicate (samples ignored).can filter fold-change (avg_log2FC) expression emphasise interesting larger change (even small difference can significant, useful determining cell types).human protein atlas useful site look single cell RNA expression given gene; e.g. CD37A dot plot convenient way summarise top distinct genes. can let read obvious celltypes see similarities clusters.can get information form marker lists dropping tool like enrichr considering cell type enrichment.\nNB: enrichR also R package, done programaticallyACTIVITY Choose cluster, pull top genes. Try enrichR > Cell Types. ? similar cluster? trust results?TODO: Probably retire one?","code":"\nDimPlot(so, group.by='seurat_clusters')\n# Need to join the layers back again for this.\nso <- JoinLayers(so)\nmarker_table <- FindAllMarkers(so, group.by='seurat_clusters', only.pos=TRUE)\nDT::datatable(marker_table)\n# Get top 3 genes per cluster, with log FC > 1\nmarker_table_top <- marker_table %>%\n    group_by(cluster) %>%\n    dplyr::filter(avg_log2FC > 1, p_val_adj < 0.01) %>%\n    slice_head(n = 3)\n\nDotPlot(so, features = unique(marker_table_top$gene)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\ntop_marker_genes <- filter(marker_table, cluster == \"1\") %>% dplyr::filter(avg_log2FC > 1, p_val_adj < 0.01) %>% pull(gene) %>% head(20)\nprint(noquote(top_marker_genes))##  [1] JCHAIN    MZB1      DERL3     IGHA1     IGKC      XBP1      IGHG2    \n##  [8] IGHG1     DUSP5     IRF4      HSP90B1   CD38      ST6GAL1   BMP6     \n## [15] CSF2RB    TNFRSF13B IGHM"},{"path":"ClusterLabelling.html","id":"cell-typing-by-reference","chapter":"12 Clustering Labeling","heading":"12.2 Cell typing by reference","text":"number tools classify cells types basis similarity reference dataset. SingleR one tool.first need acquire reference dataset.typical reference public single cell datasets matched celltype trusted annotation. Look relevant paper provided GEO accession number similar. Note every study remembers publish annotations alongside raw data, authors might willing supply processed dataset ask.Alternatively, databases single cell datasets - see Human Cell Atlas CELLxGENE datasets. databases also let browse data online - excellent resource design cell annotation stages; can look gene expression particular celltype see matches seeing.tabula sapiens project (paper) built single cell atlas good number human tissues. data browse-able hosted cellXgene tabular sapiens collectionThese colon tissue samples, large intestine set listed (includes colon samples). Conveniently, can browse data online check suitable: via cellXgene interfaceACTIVITY Finding reference dataOpen cellXgene interface large inestine set. dig around consider following.feild celltype annotation like use data - one?Can see potential issues ? E.g. batch effect?know PIGR intestinal epithelia marker - labels make sense?Broad cell class looks pretty good. ’s colon included. individual level effect UMAP (stem cells limited 1-2 samples). ’ll work, ’s easy link download data.reference dataset pre-downloaded onto VMsIts .h5ad file, common pythonic analyses. Luckily can use schard package read R directly. seurat object.Instead builds SingleCellExperiment object - data format central bioconductor packages (fine, SingleR bioconductor !). SCE objects work quite similarly seurat objects, different notation - e.g. colData rowData access cell gene information respectively.gene names object ensemble gene IDs - let change gene symbols match data.following code makes celltype predictions using reference broad specific annotation levels. takes minutes run - even 8 cores.predictions look like ;Pull annotationAnd plot UMAPThe broad predictionsAnd detailed predictions. detailed celltypes difficult see - clearly labelled.delta next score gives distance called celltype, next likely. small difference indicate uncertainty - difficult classify cell, stray counts neighbouring cell cell types similar (especially detailed classification).nice line classifications clusters.","code":"\nlibrary(SingleR)# Do not run, but these were the linux shell commands to get and rename the data\nwget https://datasets.cellxgene.cziscience.com/82e3b450-6704-43de-8036-af1838daa7df.h5ad\nmv 82e3b450-6704-43de-8036-af1838daa7df.h5ad tabula_sapiens_large_intestine_82e3b450-6704-43de-8036-af1838daa7df.h5ad\nlibrary(schard)\nts_largeintestine_h5ad <- file.path(\"data/tabula_sapiens/tabula_sapiens_large_intestine_82e3b450-6704-43de-8036-af1838daa7df.h5ad\")\nsce.ts_intestine = schard::h5ad2sce(ts_largeintestine_h5ad)\nDT::datatable(head(as.data.frame(colData(sce.ts_intestine))))\nDT::datatable(head(as.data.frame(rowData(sce.ts_intestine))))\n# Not needed, but first filter down to matched genes in our panel\nsce.ts_intestine.genename <- sce.ts_intestine[rowData(sce.ts_intestine)$feature_name %in% rownames(so),]\n\n# Are there any duplicates (we'd need to handle them, but there aren't)\n# takes the count of each feature, then checks that there aren't any >1\nstopifnot(sum(table(rowData(sce.ts_intestine.genename)$feature_name) != 1 ) == 0)\n\n# just rename the genes to the gene names\nrownames(sce.ts_intestine.genename) <-  rowData(sce.ts_intestine.genename)$feature_name\n\n# Pull out the normalised matrix.\n# Quirk of this coming from the python world, the normalised assay is called 'X'\nref_norm_matrix <- assay(sce.ts_intestine.genename, 'X')\nlibrary(BiocParallel) # allow parallelisation with MulticoreParam(). \n\nnorm_matrix <- GetAssayData(so, assay = 'RNA', layer = 'data')\n\npredictions_broad <- SingleR::SingleR(test = norm_matrix,\n                                ref   = ref_norm_matrix,\n                                labels = sce.ts_intestine.genename$broad_cell_class,\n                                aggr.ref = TRUE, # builds a pseudobulk reference , speedier processing\n                                BPPARAM = MulticoreParam(workers=8)\n                                )\n\npredictions_detailed <- SingleR::SingleR(test = norm_matrix,\n                                ref   = ref_norm_matrix,\n                                labels = sce.ts_intestine.genename$cell_type,\n                                aggr.ref = TRUE, # builds a pseudobulk reference , speedier processing\n                                BPPARAM = MulticoreParam(workers=8)\n)\npredictions_broad## DataFrame with 56853 rows and 4 columns\n##                                        scores                 labels delta.next\n##                                      <matrix>            <character>  <numeric>\n## HC_a_1_1     0.1252298:0.0506561:0.146099:... intestinal epithelia..  0.1580519\n## HC_a_2_1     0.1815377:0.1348928:0.249264:... intestinal epithelia..  0.1897494\n## HC_a_3_1     0.0518528:0.0279213:0.059416:... intestinal epithelia..  0.0542868\n## HC_a_4_1     0.1243137:0.1179463:0.130171:... intestinal epithelia..  0.0472000\n## HC_a_5_1     0.1256039:0.0411866:0.114864:... intestinal epithelia..  0.0970837\n## ...                                       ...                    ...        ...\n## CD_c_2598_4 0.0904283:0.1638795:0.0945435:... lymphocyte of b line.. 0.05787367\n## CD_c_2599_4 0.1015837:0.2218872:0.1498716:... lymphocyte of b line.. 0.08493387\n## CD_c_2604_4 0.0225413:0.1048716:0.0181309:... lymphocyte of b line.. 0.00208670\n## CD_c_2606_4 0.1538878:0.1968389:0.1524932:... lymphocyte of b line.. 0.00544398\n## CD_c_2608_4 0.0128855:0.0411252:0.0319291:...   innate lymphoid cell 0.00176397\n##                      pruned.labels\n##                        <character>\n## HC_a_1_1    intestinal epithelia..\n## HC_a_2_1    intestinal epithelia..\n## HC_a_3_1    intestinal epithelia..\n## HC_a_4_1    intestinal epithelia..\n## HC_a_5_1    intestinal epithelia..\n## ...                            ...\n## CD_c_2598_4 lymphocyte of b line..\n## CD_c_2599_4 lymphocyte of b line..\n## CD_c_2604_4 lymphocyte of b line..\n## CD_c_2606_4 lymphocyte of b line..\n## CD_c_2608_4   innate lymphoid cell\n# Check that the order of cells is the same\nstopifnot(all(rownames(predictions_broad) == colnames(so)))\n\n# Then pull in the celltypes from pruned labels, and the 'delta.next' score for each.\nso$singleR_pred_broad    <- predictions_broad$pruned.labels\nso$singleR_pred_detailed <- predictions_detailed$pruned.labels\nso$singleR_delta.next_broad    <- predictions_broad$delta.next\nso$singleR_delta.next_detailed <- predictions_detailed$delta.next\nDimPlot(so, group.by = 'singleR_pred_broad', label = TRUE) \nDimPlot(so, group.by = 'singleR_pred_detailed', label = TRUE) + NoLegend()\nFeaturePlot(so, c('singleR_delta.next_broad','singleR_delta.next_detailed'))\nVlnPlot(so, features='singleR_delta.next_broad', group.by='singleR_pred_broad', pt.size = 0) + NoLegend()\n## Celltype proportions\ncelltype_summary_table<- so@meta.data %>% as_tibble() %>%\n  group_by(seurat_clusters, singleR_pred_broad ) %>%\n  summarise(n_cells = n())\n\n\nggplot(celltype_summary_table, aes(x=seurat_clusters, y=n_cells, fill=singleR_pred_broad)) +\n  geom_bar(position=\"fill\", stat=\"identity\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0,0)) +\n  ggtitle( \"Celltyping vs clustering\") "},{"path":"ClusterLabelling.html","id":"spatial-examination-of-plots","chapter":"12 Clustering Labeling","heading":"12.3 Spatial examination of plots","text":"clusters defined purely transcriptional similarity, plotted tissue, location pattern emerges.\ncan see cluster 1 epithelial cells.Plotting whole sample, zoomed region just one FOVs (cosmx definition) within .broad predictions?","code":"\nso_sample <- so[, so$tissue_sample==\"HC_a\"]\nImageDimPlot(so_sample,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             cols = 'polychrome', #See DiscretePalette()\n             group.by = \"seurat_clusters\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)\nso_fov    <- so_sample[, so_sample$fov==1]\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             cols = 'polychrome', #See DiscretePalette()\n             group.by = \"seurat_clusters\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by =  'singleR_pred_broad',\n             boundaries   = \"segmentation\",\n             cols = 'polychrome', #See DiscretePalette()\n             crop=TRUE)"},{"path":"ClusterLabelling.html","id":"using-the-images-data","chapter":"12 Clustering Labeling","heading":"12.4 Using the images data","text":"big advantage spatial methods generally also H&E immunofluorescence() (cell/membrane stains full panel) images (sometimes ), now can see cell.imaging data, ground truth cell phenotype labels morphology cell. Even H&Es, pathologist can tell difference different white blood cells (lymphocytes, basophils, eosinophils, neutrophils, macrophages etc.). immunofluoresence, lose morphology gain additional info staining patterns - huge advantage learn protein stains supposed look tell difference real signal noise non-specific staining. Asking pathologist specialises tissue researching huge help comes checking work!course, limitations morphology can’t really tell ’s CD4 T cell CD8 T cell example, also able recognise protein CD4 signal exclusively nucleus, tissue problems (fixation? degradation?) actually CD4 T cell even measured value CD4 high.Even don’t use directly celltype labelling, can validate results. might fairly confident celltypes, however ’s one ’s giving mixed signals, can helpful inspect. Sometimes, notice ’s mixed cluster, else two cell populations mixed together signals getting confused. can help tease two populations apart. may find clearer work plotting cell phenotype assignments images UMAP.introduction looking images; introductory notes. protein stains, can helpful compare staining cells ones protein atlas (just RNA!) tissue (although stains perfect either).\nmight also need align coordinates image registration (bioconductor foccused resource).won’t cover using image data like today’s workshop;older dataset, images.currently lack support storing images seurat single cell spatial technologies (possible spot-based visium). tools exist e.g. cosmx, might pull celltype annotations napari see guide","code":""},{"path":"ClusterLabelling.html","id":"recording-celltype-annotations","chapter":"12 Clustering Labeling","heading":"12.5 Recording celltype annotations","text":"Note many tools approaches determining celltypes. Especially reference based tool space singleR just one option; See reviewIt may worthwhile seek method uses image positional data conjunction transcriptome - active area research, now, singleR good enough. seeking methods, aware methods developed spot-based technologies (Visium), may necessarily work scale -situ single cell technologies.today, lets apply celltype labels.","code":"\n## Apply some cluster names\nso$cluster_code <- factor( paste0(\"c\", so$seurat_clusters),   levels=paste0('c', levels(so$seurat_clusters)))\nIdents(so) <- so$cluster_code\n\ncluster_content <- list(\n  c0 = \"Stem cell\", \n  c1 = \"Plasma cell\", #B lymphocyte lineage: JCHAIN/ MZB1 / DERL3  (typical for Plasma/Plasma/Plasma)\n  c2 = \"Fibroblast\",   \n  c3 = \"Mixed\",  \n  c4 = \"Macrophage and Dendritic cell\",  # See detailed predictions, and macrophages are important in this study.    \n  c5 = \"T cell\",\n  c6 = \"Intestinal epithelial cell\",  # PIGR \n  c7 = \"Contractile cell\",        \n  c8 = \"B cell\",  # B lymphocyte lineage: CD37 / CIITA / IGHM  (B/B/Plasma)           \n  c9 = \"Endothelia\",\n  c10 = \"Granulocyte\"\n)\n\n# c1 => c1: Stem cell\nso$cluster_labels <- factor (\n  paste0(names(cluster_content[as.character(so$cluster_code)]), \": \", cluster_content[as.character(so$cluster_code)]) ,\n  levels = paste0( names(cluster_content), \": \", cluster_content)\n)\nDimPlot(so, group.by='cluster_labels', label = TRUE) + NoLegend()\nso_fov <- so[, so$tissue_sample==\"HC_a\" & so$fov==1]\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             cols = 'polychrome', \n             group.by = \"cluster_labels\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)"},{"path":"ClusterLabelling.html","id":"pull-in-real-annotation","chapter":"12 Clustering Labeling","heading":"12.6 Pull in real annotation","text":"authors study shared actual celltypes. can simply directly import annotation!many cells per type broad set? tissue?‘singleR2’ set , detailed! much plotting tissue. (NB: determined celltypes single cell data, used reference). Macrophage subtypes important paper, didn’t see simple macrophage cluster clusters. can quick heatmap look two classifications compare (can work better many celltypes display nicely colours). NB: plot doesn’t view well small sizes - zoom see labels.","code":"\nannotation_file <- 'data/GSE234713_CosMx_annotation.csv.gz'\nanno_table <- read_csv(annotation_file, show_col_types = F)\nanno_table <- as.data.frame(anno_table)\nrownames(anno_table) <- anno_table$id\n\nso$paper_celltype <- factor(anno_table[colnames(so),]$subset)\nso$paper_singleR2 <- factor(anno_table[colnames(so),]$SingleR2)\ntable(so$paper_celltype)## \n##      epi myeloids  plasmas   stroma   tcells \n##    14972     5866    20226    13102     2665\nso_fov    <- so[, so$tissue_sample==\"HC_a\" & so$fov==1]\nImageDimPlot(so_fov,\n             fov          = \"GSM7473682.HC.a\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             group.by = \"paper_celltype\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)\ntable(so$paper_singleR2)## \n##                       B cell                  BEST4 OTOP2 \n##                         1205                         1596 \n##                          CD4                          CD8 \n##                          835                          551 \n##                  Colonocytes                Cycling cells \n##                         2978                          309 \n##              Cycling myeloid              Cycling T cells \n##                          235                           57 \n##                   Cycling TA                          DCs \n##                          332                          233 \n##                           DN                  Endothelium \n##                          140                         1943 \n##              Enteroendocrine                  Eosinophils \n##                          182                           23 \n##             Epithelium Ribhi                  Fibroblasts \n##                          952                          280 \n##                         FRCs                    GC B cell \n##                         1390                          777 \n##                       gd IEL                         Glia \n##                           80                          734 \n##                       Goblet                         ILC4 \n##                         1915                           35 \n##     Inflammatory fibroblasts       Inflammatory monocytes \n##                         1314                          102 \n##                           M0                           M1 \n##                          596                           50 \n##                           M2              Macrophage NRG1 \n##                         2821                         1180 \n##                         MAIT                         Mast \n##                          265                          497 \n##                Memory B cell                   MT T cells \n##                         1481                           31 \n##               Myofibroblasts                           N1 \n##                         3689                           38 \n##                           N2                           N3 \n##                           47                           44 \n##                 Naïve B cell                           NK \n##                         2022                           40 \n##                  Paneth-like PC  immediate early response \n##                          161                         1575 \n##                       PC IgA            PC IgA heat shock \n##                          316                          932 \n##                   PC IgA IgM                       PC IgG \n##                         3228                         8380 \n##                    Pericytes                Ribhi T cells \n##                         1259                           21 \n##                           S1                          S2a \n##                          822                          551 \n##                          S2b                           S3 \n##                          658                          462 \n##         Secretory progenitor                T cells CCL20 \n##                         6445                           99 \n##                        Tregs                   Tuft cells \n##                          511                          411\nheatmap(table(so$paper_singleR2, so$cluster_labels), Rowv = NA, Colv=NA, margins = c(15, 10)) # base R heatmap - makes margin bigger to fit names"},{"path":"ClusterLabelling.html","id":"save-the-data","chapter":"12 Clustering Labeling","heading":"12.7 Save the data","text":"natural place save annotated data object downstream analysis;","code":"\nsaveRDS(so, file = here(\"data\", \"GSE234713_CosMx_IBD_seurat_04_celltypes.RDS\"))"},{"path":"ClusterLabelling.html","id":"use-the-annotations","chapter":"12 Clustering Labeling","heading":"12.8 Use the annotations!","text":"Now can fun plots cell types - instance see ’s change proportions samples. test formally propeller","code":"\n## Celltype proportions\ncelltype_summary_table<- so@meta.data %>% as_tibble() %>%\n  group_by(condition, tissue_sample, cluster_labels ) %>%\n  summarise(n_cells = n())\n\n\n\nggplot(celltype_summary_table, aes(x=tissue_sample, y=n_cells, fill=cluster_labels)) +\n  geom_bar(position=\"fill\", stat=\"identity\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0,0)) +\n  ggtitle( \"Celltype composition\") +\n  facet_wrap(~condition, ncol = 1, scales = 'free_y')"},{"path":"ClusterLabelling.html","id":"what-about-that-missing-celltype-in-sample-cd_b","chapter":"12 Clustering Labeling","heading":"12.9 What about that missing celltype in sample CD_b?","text":"Remember CD_b missing area UMAP? Corresponding two clusters? epithelial celltypes, plot - ’s epithelia! data subsampled full dataset.","code":"\nso_CD_b <- so[, so$tissue_sample==\"CD_b\"]\nImageDimPlot(so_CD_b,\n             fov          = \"GSM7473689.CD.b\",\n             axes = TRUE,\n             border.color = NA, border.size = 0.1,\n             cols = 'polychrome', \n             group.by = \"cluster_labels\",\n             boundaries   = \"segmentation\",\n             crop=TRUE)"},{"path":"SpatiallyRestrictedGenes.html","id":"SpatiallyRestrictedGenes","chapter":"13 Spatially Restricted Genes","heading":"13 Spatially Restricted Genes","text":"genes spatially restricted expression across tissue? might localised particular region indicate spatial activity.can calculate ‘spatial autocorrelation’ MoransI test find .","code":"\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(DT)"},{"path":"SpatiallyRestrictedGenes.html","id":"run-moransi-once","chapter":"13 Spatially Restricted Genes","heading":"13.1 Run MoransI once","text":"run quickly, going arbitrarily reduce number variable features just 15. real life, might pick VariableFeatures.First lets run single sample subsetting object.’s current bug (see ticket) FindSpatiallyVariableFeatures function kind data. able run directly seurat object , workaround, run ‘RNA’ assay.results end gene level metadata. Pull , display genes ran.genes look like tissue? can interpret ?","code":"\nso <- FindVariableFeatures(so, nfeatures=15)\nthe_sample <- 'CD_a'\nthe_fov    <- 'GSM7473688.CD.a'\nso_sample  <- subset(so, tissue_sample == the_sample)\n# If the Seurat method above crashes (segfault), a workaround is\n# running FindSpatiallyVariableFeatures at the assay level\nso_sample_assay <- so_sample[['RNA']]\ntc <- GetTissueCoordinates(so_sample)\nrownames(tc)<- tc$cell # the innards of findSpatiallyVariableFeatures expect rownames, but they're not there. Add them.\n\n# When given an 'assay' FindSpatiallyVariableFeatures returns an assay. Put it back in the seurat object\nso_sample[['RNA']] <- FindSpatiallyVariableFeatures(\n  so_sample_assay,\n  layer = \"scale.data\",\n  spatial.location = tc, # now with rownnames\n  features = VariableFeatures(so_sample)[1:15], # Just a few for testing\n  selection.method = \"moransi\",\n  nfeatures=10 # mark top 10 spatially variable\n)\n#Put feature name as a column in the feature metadata\nso_sample[[\"RNA\"]]@meta.data$feature <-rownames(so_sample[[\"RNA\"]])\ngene_metadata <- so_sample[[\"RNA\"]]@meta.data\n\ngene_metadata_morans <- \n  filter(gene_metadata, !is.na(moransi.spatially.variable.rank)) %>%\n  select(feature, \n         MoransI_observed, MoransI_p.value, moransi.spatially.variable,moransi.spatially.variable.rank) %>% \n  arrange(moransi.spatially.variable.rank)\n  \nDT::datatable(gene_metadata_morans, width = '100%')\nImageDimPlot(so_sample, \n             molecules = 'IGHA1', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\",\n             border.color = NA, axes = T, crop=TRUE) + ggtitle(the_sample)\nImageDimPlot(so_sample, \n             molecules = 'AQP8', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\",\n             border.color = NA, axes = T, crop=TRUE)+ ggtitle(the_sample)\nImageDimPlot(so_sample, \n             molecules = 'KRT20', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\",\n             border.color = NA, axes = T, crop=TRUE)+ ggtitle(the_sample)"},{"path":"SpatiallyRestrictedGenes.html","id":"run-moransi-on-all-samples","chapter":"13 Spatially Restricted Genes","heading":"13.2 Run MoransI on all samples","text":"expression pattern gene disrupted? difference samples groups?Lets run test every sample. slow, 15 genes 6 small subsetted samples takes 2-3minutes.real life, parallelised /run overnight.Lets visualise MoransI scores gene sample boxplot. Note isn’t established standard way interpreting scores, give us way prioritise look .MoransI scores -1 (anticorrelated) 1 (perfectly correlated) - 0 random. baseline isn’t 0 - probably observations already limited tissue. ’s still clearly genes higher scores others, even though variation samples quite high.","code":"\n# Record moransI results for each sample, one by one.\nsamples <- unique(so@meta.data$tissue_sample)\nresults_list <- list()\nfor (the_sample in samples) {\n  \n  so.sample <- subset( so, subset= tissue_sample == the_sample)\n\n  so.sample.assay <- so.sample[['RNA']]\n  tc <- GetTissueCoordinates(so.sample)\n  rownames(tc)<- tc$cell\n  # When given an 'assay' FindSpatiallyVariableFeatures returns an assay. Put it back in the seurat object.\n  so.sample[['RNA']] <- FindSpatiallyVariableFeatures(\n    so.sample.assay,\n    layer = \"scale.data\",\n    spatial.location = tc,\n    features = VariableFeatures(so.sample),\n    selection.method = \"moransi\",\n    nfeatures=15 # mark top 10 spatially variable\n    )\n  # --- end workaround\n  \n  \n  # Format output table\n  so.sample[[\"RNA\"]]@meta.data$feature <- rownames(so.sample[[\"RNA\"]])\n  gene_metadata <- so.sample[[\"RNA\"]]@meta.data\n  results <- \n  select(gene_metadata, \n         feature, \n         MoransI_observed, \n         MoransI_p.value, \n         moransi.spatially.variable,\n         moransi.spatially.variable.rank) %>% \n    filter(!is.na(moransi.spatially.variable.rank)) %>% # only tested\n    arrange(moransi.spatially.variable.rank) %>%\n    mutate(sample = the_sample) %>%\n    select(sample, everything())\n\n  \n  results_list[[the_sample]] <- results\n}\n\n# Collect output result \nresults_all <- bind_rows(results_list)\n\n\n# Add group by deleting pulling out the sample name with everything after _ deleted.\nresults_all$group <- gsub(\"_.*\",\"\", results_all$sample)\n# unique set of genes that were top 10 morans in any sample\nplot_genes <- filter(results_all, moransi.spatially.variable.rank <= 10) %>% pull(feature) %>% unique()\nggplot(filter(results_all, feature %in% plot_genes), aes(x=feature, y=MoransI_observed)) +\n  geom_boxplot() +\n  geom_point( mapping=aes(col=sample)) +\n  theme_bw() +\n  ggtitle(\"MoransI Per sample\") +\n  facet_wrap(~group, ncol=1)"},{"path":"SpatiallyRestrictedGenes.html","id":"explore-moransi-results","chapter":"13 Spatially Restricted Genes","heading":"13.3 Explore moransI results","text":"doesn’t mean much isolation, lets look actual distribution .IGKC high autocorrelation overContrast CHGA - still highly variable gene, low(er) spatial autocorrelationCCL21 combination high low scores. ?’s big clump CCL21 bottom HC_a, lets figure FOV zoom . Now can practically bring back cluster labels.seems group T cells expressing CCL21’s. can highlight alongside transcripts.look Garrido-Trigo et al’s paper - highlight kind lymphoid niches, full T, B plasma cells. go look macrophage subtypes within regions across different conditions.case, formally defined niche-neighbourhood analysis; basic level, classifies cell ‘niche’ depending type cells immediate vicinity. analyse data ‘niche’ level.","code":"\nso.CD_a <- subset( so, subset= tissue_sample == 'CD_a')\nso.HC_a <- subset( so, subset= tissue_sample == 'HC_a')\np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'IGKC', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'IGKC', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)\np1 + p2 \np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'CHGA', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'CHGA', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)\np1 + p2 \np1 <- ImageDimPlot(so.CD_a, \n             molecules = 'CCL21', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)\np2 <- ImageDimPlot(so.HC_a, \n             molecules = 'CCL21', \n             group.by = 'tissue_sample', cols = c(\"grey30\"), # Make all cells grey.\n             boundaries = \"segmentation\", border.color = NA, axes = T, crop=TRUE)\np1 + p2 \nImageDimPlot(so.HC_a, group.by = 'fov')\nso.HC_a.4 <- subset(so.HC_a, fov==4)\n\nImageDimPlot(so.HC_a.4, \n             molecules  = 'CCL21', \n             group.by   = 'cluster_labels', alpha=0.3,# Show clusters, but faded \n             cols = 'polychrome',\n             boundaries = \"segmentation\",  border.color = NA, axes = T, crop=TRUE) \nso.HC_a.4$isT <- ifelse(so.HC_a.4$cluster_labels == \"c5: T cell\", \"T cell\", \"Other\")\nImageDimPlot(so.HC_a.4, \n             molecules  = 'CCL21', \n             group.by   = 'isT', alpha=0.3,# Show clusters, but faded \n             cols = c(\"T cell\"=\"blue\", 'Other'='grey80'),\n             boundaries = \"segmentation\",  border.color = NA, axes = T, crop=TRUE) "},{"path":"NextSteps.html","id":"NextSteps","chapter":"14 Next steps","heading":"14 Next steps","text":"’ve done fairly streamlined preprocessing single cell spatial dataset. point analysis time drill biology start focussed analyses. might possible?","code":""},{"path":"NextSteps.html","id":"what-did-the-authors-find-from-this-dataset","chapter":"14 Next steps","heading":"14.1 What did the authors find from this dataset?","text":"paper Macrophage neutrophil heterogeneity single-cell spatial resolution human inflammatory bowel disease Garrido-Trigo et al performed extensive analysis cosmx Data alongside single cell, bulk microscopy data.\nsummarise kinds things possible single-cell spatial data - list analyses paper specifically use spatial dataset;Identified detailed celltypes single cell data (whole transcriptome), used classify celltypes spatial data. classified data broad specific levels (page 2 - Integration single-cell RNA sequencing spatial molecular imaging analysis provides map healthy inflamed colon, Figs 1b part Supp Fig 1b epithelia)Looked differential abundance celltypes across samples (page 2 - Transcriptional analysis single-cell spatial resolution reveals different populations resident inflammatory macrophages colonic mucosa )Identified cell niches different neighbourhoods, e.g lymphoid structures, lamina propria lower crypt. quantified increase inflammatory celltypes neighbourhoods, characterised another neighbourhood seen IBD samples. (page 2 - Integration single-cell RNA sequencing spatial molecular imaging analysis provides map healthy inflamed colon)observed granuloma features one patient. examined macrophage subtypes within surrounding immune cell microenvironment. (Figure 4b, page 6 CosMx Spatial Molecular Imaging analysis confirms expansion Inflammation-Dependent Alternative macrophages reveals tissue distribution inflammatory bowel disease colon)Identified change myeloid cell localisation quantifying distance macrophage, MAST cells Dendritic cells mucosal surface (page 2 - Transcriptional analysis single-cell spatial resolution reveals different populations resident inflammatory macrophages colonic mucosa )Observed spatially localised expression gene (NRG1) within subset apically-located fibroblasts (page 4 - Inflammation-dependent alternative macrophages express neuregulin 1)","code":""},{"path":"NextSteps.html","id":"other-techniques.","chapter":"14 Next steps","heading":"14.2 Other techniques.","text":"","code":""},{"path":"NextSteps.html","id":"imaging-related","chapter":"14 Next steps","heading":"14.2.1 Imaging related","text":"SegmentationGood cell segmentation images underpins downstream analysis. Different platforms offer inbuilt segmentation methods, often require tweaking default different tissues, antibodies runs.-machine segmentation: e.g. Xenium/CosMxDirectly images using specialised microscopy methods segmentation. e.g. CellPoseMany resources online…Image analysishttps://cellprofiler.org/ : One toolkit often used traditional imaging various tasks, e.g. cell morphology quantifications.Many resources online…Image registration Especially multiomics analysis, able align images tissue different sources essential. E.g. H&E, immunofluorescence, proteomics e.t.chttps://lmweber.org/OSTA/pages/crs-spatial-registration.html : Image registration, aligning images different sources. E.g. H&E, immunofluorescence, proteomics e.t.cMany resources online…Sample Regional AnnotationIt’s typical multiple samples single slide. need label cell ID. Similarly might want outline particular region.Define samples centroid x-y coordinates (Painstaking, can enough)Vendor-based solutions; e.g. regional highlighting Xenium explorerImport masks annotated imagesDo know better approaches tools? Please share.","code":""},{"path":"NextSteps.html","id":"downtream-annotation-and-analyses","chapter":"14 Next steps","heading":"14.2.2 Downtream annotation and analyses","text":"Niche analysisCell ‘niche’ analysis ‘spatial context’ major avenue situ spatial analyses. E.g. tumour microenvrionments, tissue regions. actual definition ‘niche’ considered flexible - depends trying achieve - different tools take differnt approches.Seurat findNiches()OSCA neighbourhood analyses: https://lmweber.org/OSTA/pages/img-neighbourhood-analysis.htmlhoodscanR : https://www.bioconductor.org/packages/release/bioc/vignettes/hoodscanR/inst/doc/Quick_start.htmlGraphST : https://www.nature.com/articles/s41467-023-36796-3Many …‘Spatial’ pattern tests cell free analysesHuge area research, starting points;Co-localisation differential co-localisation: https://lmweber.org/OSTA/pages/mult-diff-spatial-patterns.htmlStatial toolkit (Kontextual Spatiomark) quantifying spatial relationhips expression spatial contet: Statial packageSpatial tests, adapted form geospatial methods: https://pachterlab.github.io/voyager/Molecule level data object (SingleCellExperiment): https://www.bioconductor.org/packages/release/bioc/html/MoleculeExperiment.htmlMany …Differential expressionThough current gen single-cell spatial techonlogies lower counts fewer genes panel single cell (bulk) studies, able test differences gene expression valuable; potentially within celltype, niche spatial region couldn’t isolated technologies. mind, single cell methods can applied.Differential expression scRNAseq (bioconductor): https://bioconductor.org/books/3.21/OSCA.multisample/multi-sample-comparisons.htmlApplied example (dataset!) running differential expresison celltype level using Seurat bioconductor ecosystemSpatially-aware differential expression methods; emerging quickly, consider looking Differential gene expression analysis spatial transcriptomic experiments using spatial mixed models spacexrMany …Differential abundanceDifferences numbers types cell particular location neighbour niche groups can indicate biological differences; cell migration, expansion development.Propeller testing celltype proportion changes: https://github.com/phipsonlab/speckleMany …MultiomicsAnother huge area research, starting points. much depends multiomics .Seurat multimodal vignette (single cell): https://satijalab.org/seurat/articles/multimodal_vignette (single cell)Image registration, aligning images different sources. E.g. H&E, immunofluorescence, proteomics e.t.c : https://lmweber.org/OSTA/pages/crs-spatial-registration.htmlMany …","code":""},{"path":"NextSteps.html","id":"visualisation","chapter":"14 Next steps","heading":"14.2.3 Visualisation","text":"many tools , strengths limitations.VRomics: https://ramialison-lab.github.io/pages/vromics.htmlXenium explorer (Xenium ): https://www.10xgenomics.com/support/software/xenium-explorer/latestAtoMx (cosmx ) : https://nanostring.com/products/atomx-spatial-informatics-platform/atomx-sip-overview/Napari cosmx guideCellXGene (single cell) : https://cellxgene.cziscience.com/iSEE (single cell): https://github.com/iSEE/iSEEMany …","code":""},{"path":"resources.html","id":"resources","chapter":"15 Resources","heading":"15 Resources","text":"Links various useful resources.General guides & VignettesSingle cell best practices : Comprehensive resource single cell analysisOSCA - (Orchestrating Single Cell Analayis bioconductor ) : detailed resource single cell analyses using bioconductor ecosystem packages - still applicable certain spatial analyses.OSTA (Orchestrating Spatial Transcriptomics Analysis Bioconductor : detailed resource perform spatial analyses using bioconductor ecosystem packages. Even using Seurat, useful resource detailed explanations analysis tasks.Spatial Sampler : Worked examples code snippets run various statistical tests single cell spatial data.10X analysis guidesBasic cell histologyIntroduction imaging-based spatial transcriptomics analysis: Workshop walking spatial analysis cosmx data.Analysis ecosytems Seurat: Seurat package. Originally single cell transcriptomics, now supports analyses spatial technologies.Bioconductor: bioconductor repository much broader just spatial, various toolks centre around SpatialExperiment SpatialFeatureExperiment (derived SingleCellExperiment objects). OSTA book good overview whats possible. Voyager Documentaion covering SpatialFeatureExperiment methods.SCverse: ecosystem analysing single cell spatial single cell data python.Giotto Suite: Another R based ecosystem spatial analyses.Cell Profiler : One toolkit often used traditional imaging various tasks, e.g. cell morphology quantifications.Specific analyses / toolsSeurat spatial vignette (imaging-based ) : load plot spatial data seurat - covers different technologies.Seurat spatial vignette (imaging-based ) : load plot spatial data seurat - covers different technologies.[Seurat visum HD vignette][https://satijalab.org/seurat/articles/visiumhd_analysis_vignette] : Analysis spot-based visium HD data.[Seurat visum HD vignette][https://satijalab.org/seurat/articles/visiumhd_analysis_vignette] : Analysis spot-based visium HD data.Seurat cheat-sheet : Essential utility commands seurat analysis, e.g merging seurat objects different samples, subsetting, managing feilds view, assays layer data.Seurat cheat-sheet : Essential utility commands seurat analysis, e.g merging seurat objects different samples, subsetting, managing feilds view, assays layer data.‘Introduction scRNA-seq integration’ vignette: merge data different experiments (including scRNAseq)‘Introduction scRNA-seq integration’ vignette: merge data different experiments (including scRNAseq)Seurat sketch based analysis : large datasets.Seurat sketch based analysis : large datasets.Clustree : useful toolkit choosing cluster resolutions.Clustree : useful toolkit choosing cluster resolutions.Propeller testing celltype proportion changes: speckle package tools test changes celltype proportions groupsPropeller testing celltype proportion changes: speckle package tools test changes celltype proportions groupsStatial package Kontextual paper: Toolkit quanitifying spatial differences betweenStatial package Kontextual paper: Toolkit quanitifying spatial differences ","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
